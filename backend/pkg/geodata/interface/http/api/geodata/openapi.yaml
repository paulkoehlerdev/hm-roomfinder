openapi: '3.0.0'

info:
  version: "1.0.0"
  title: HM-Roomfinder Geodata
  description: HM Roomfinder Geodata Backend OpenAPI specification
  license:
    name: MIT
    url: https://opensource.org/licenses/mit-license.php

externalDocs:
  description: find more info here
  url: http://geojson.org/geojson-spec.html#geometry-objects

servers:
  - url: https://api.hmroomfinder.gosmroutify.xyz/v1/
    description: Production Server
  - url: http://localhost:8080/v1/
    description: Local Dev Environment

paths:
  /building:
    get:
      summary: Get Buildings
      description: Returns outlines and information for all buildings
      responses:
        200:
          $ref: '#/components/responses/FeatureCollection200'

  /level:
    get:
      summary: Get Levels
      description: Returns outlines and information for all levels
      parameters:
        - name: building_id
          in: query
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/FeatureCollection200'

        400:
          $ref: '#/components/responses/BadRequest400'

  /room:
    get:
      summary: Get Rooms
      description: Returns outlines and information for all rooms
      parameters:
        - name: level_id
          in: query
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/FeatureCollection200'

        400:
          $ref: '#/components/responses/BadRequest400'


  /door:
    get:
      summary: Get Doors
      description: Returns outlines and information for all doors
      parameters:
        - name: level_id
          in: query
          schema:
            type: integer
          required: true
      responses:
        200:
          $ref: '#/components/responses/FeatureCollection200'

        400:
          $ref: '#/components/responses/BadRequest400'

components:
  responses:
    BadRequest400:
      description: Bad Request

    FeatureCollection200:
      description: Successful response
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/FeatureCollection'

    Feature200:
      description: Successful response
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/Feature'

  schemas:
    FeatureCollection:
      type: object
      required:
        - type
        - features
      properties:
        type:
          type: string
          enum: [FeatureCollection]
        features:
          type: array
          items:
            $ref: '#/components/schemas/Feature'

    Feature:
      type: object
      required:
        - type
        - properties
        - geometry
      properties:
        type:
          type: string
          enum: [Feature]
        properties:
          type: object
          additionalProperties: true
          required:
            - id
          properties:
            name:
              type: string
              description: Name of Feature
            id:
              type: integer
              description: ID of Feature
          examples:
            - building_id: 0
              building_name: F
              name:
                de: Gebäude Karlstraße
                en: Building Karlstraße
              faculties: [1, 2, 8]
              tags: {}
            - level_id: 0
              level_name: EG
              building_id: 0
              tags: {}
            - room_id: 0
              room_name: F0.07
              level_id: 0
              building_id: 0
              tags: { }
        geometry:
          oneOf:
            - $ref: '#/components/schemas/GeometryPolygon'
            - $ref: '#/components/schemas/GeometryPoint'

    GeometryPoint:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Point]
        coordinates:
          type: array
          maxItems: 2
          minItems: 2
          items:
            type: number
            format: double
          example:
            - - 11.568653222691097
              - 48.14370448060322

    GeometryPolygon:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum: [Polygon]
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              maxItems: 2
              minItems: 2
              items:
                type: number
                format: double
          example:
            - - - 11.568653222691097
                - 48.14370448060322
              - - 11.56806254201993
                - 48.142720443019584
              - - 11.56910911716946
                - 48.14241358873204
              - - 11.569422296853844
                - 48.142514110166104
              - - 11.56921615326462
                - 48.142807737438574
              - - 11.569327153659088
                - 48.14302200492915
              - - 11.569156688767492
                - 48.14326536938867
              - - 11.568891080679776
                - 48.14363834963643
              - - 11.568653222691097
                - 48.14370448060322

        
        
        
        